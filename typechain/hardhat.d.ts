/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import { FactoryOptions, HardhatEthersHelpers as HardhatEthersHelpersBase } from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "FlashLoanReceiverBase",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.FlashLoanReceiverBase__factory>;
    getContractFactory(
      name: "IFlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IFlashLoanReceiver__factory>;
    getContractFactory(
      name: "IPool",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IPool__factory>;
    getContractFactory(
      name: "IPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IPoolAddressesProvider__factory>;
    getContractFactory(
      name: "Flashloan",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Flashloan__factory>;

    getContractAt(name: "IERC20Permit", address: string, signer?: ethers.Signer): Promise<Contracts.IERC20Permit>;
    getContractAt(name: "IERC20", address: string, signer?: ethers.Signer): Promise<Contracts.IERC20>;
    getContractAt(
      name: "FlashLoanReceiverBase",
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.FlashLoanReceiverBase>;
    getContractAt(
      name: "IFlashLoanReceiver",
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IFlashLoanReceiver>;
    getContractAt(name: "IPool", address: string, signer?: ethers.Signer): Promise<Contracts.IPool>;
    getContractAt(
      name: "IPoolAddressesProvider",
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IPoolAddressesProvider>;
    getContractAt(name: "Flashloan", address: string, signer?: ethers.Signer): Promise<Contracts.Flashloan>;

    // default types
    getContractFactory(name: string, signerOrOptions?: ethers.Signer | FactoryOptions): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>;
    getContractAt(nameOrAbi: string | any[], address: string, signer?: ethers.Signer): Promise<ethers.Contract>;
  }
}
