/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Flashloan, FlashloanInterface } from "../../contracts/Flashloan";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "premiums",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "flashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610bbd380380610bbd83398101604081905261002f916100d8565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100d8565b6001600160a01b031660a052506100fc9050565b6001600160a01b03811681146100d557600080fd5b50565b6000602082840312156100ea57600080fd5b81516100f5816100c0565b9392505050565b60805160a051610a9061012d6000396000818160a7015281816102ca01526105a60152600060560152610a906000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630542975c146100515780637535d246146100a2578063920f5c84146100c95780639d9e465c146100ec575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100dc6100d73660046106ad565b610101565b6040519015158152602001610099565b6100ff6100fa3660046107b1565b61036e565b005b6000805b8981101561035d577fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5898983818110610140576101406107db565b9050602002013560405161018e919060408082526008908201527f626f72726f7765640000000000000000000000000000000000000000000000006060820152602081019190915260800190565b60405180910390a17fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b58787838181106101c9576101c96107db565b90506020020135604051610217919060408082526003908201527f66656500000000000000000000000000000000000000000000000000000000006060820152602081019190915260800190565b60405180910390a16000610264888884818110610236576102366107db565b905060200201358b8b8581811061024f5761024f6107db565b9050602002013561062590919063ffffffff16565b90508b8b83818110610278576102786107db565b905060200201602081019061028d919061080a565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201849052919091169063095ea7b3906044016020604051808303816000875af1158015610324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103489190610825565b5050808061035590610876565b915050610105565b5060019a9950505050505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff91906108ae565b905081811161046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f62616c203c3d20616d6f756e7400000000000000000000000000000000000000604482015260640160405180910390fd5b6040805160018082528183019092523091600091906020808301908036833701905050905084816000815181106104a7576104a76107db565b73ffffffffffffffffffffffffffffffffffffffff92909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090508481600081518110610505576105056107db565b6020908102919091010152604080516001808252818301909252600091816020016020820280368337019050509050600081600081518110610549576105496107db565b602090810291909101810191909152604080519182018152600080835290517fab9c4b5d0000000000000000000000000000000000000000000000000000000081523092919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063ab9c4b5d906105e7908a908a908a908a908a908a908a9060040161096d565b600060405180830381600087803b15801561060157600080fd5b505af1158015610615573d6000803e3d6000fd5b5050505050505050505050505050565b60006106318284610a42565b9392505050565b60008083601f84011261064a57600080fd5b50813567ffffffffffffffff81111561066257600080fd5b6020830191508360208260051b850101111561067d57600080fd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106a857600080fd5b919050565b600080600080600080600080600060a08a8c0312156106cb57600080fd5b893567ffffffffffffffff808211156106e357600080fd5b6106ef8d838e01610638565b909b50995060208c013591508082111561070857600080fd5b6107148d838e01610638565b909950975060408c013591508082111561072d57600080fd5b6107398d838e01610638565b909750955085915061074d60608d01610684565b945060808c013591508082111561076357600080fd5b818c0191508c601f83011261077757600080fd5b81358181111561078657600080fd5b8d602082850101111561079857600080fd5b6020830194508093505050509295985092959850929598565b600080604083850312156107c457600080fd5b6107cd83610684565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561081c57600080fd5b61063182610684565b60006020828403121561083757600080fd5b8151801515811461063157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108a7576108a7610847565b5060010190565b6000602082840312156108c057600080fd5b5051919050565b600081518084526020808501945080840160005b838110156108f7578151875295820195908201906001016108db565b509495945050505050565b6000815180845260005b818110156109285760208185018101518683018201520161090c565b8181111561093a576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060e0820173ffffffffffffffffffffffffffffffffffffffff808b168452602060e081860152828b5180855261010087019150828d01945060005b818110156109c85785518516835294830194918301916001016109aa565b505085810360408701526109dc818c6108c7565b935050505082810360608401526109f381886108c7565b73ffffffffffffffffffffffffffffffffffffffff87166080850152905082810360a0840152610a238186610902565b915050610a3660c083018461ffff169052565b98975050505050505050565b60008219821115610a5557610a55610847565b50019056fea2646970667358221220fc42f2b0403c0f927858fbbfbfbb1a26c4fc8d873bba65863c0097d3c1c889e364736f6c634300080d0033";

type FlashloanConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: FlashloanConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Flashloan__factory extends ContractFactory {
  constructor(...args: FlashloanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Flashloan> {
    return super.deploy(_addressProvider, overrides || {}) as Promise<Flashloan>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): Flashloan {
    return super.attach(address) as Flashloan;
  }
  override connect(signer: Signer): Flashloan__factory {
    return super.connect(signer) as Flashloan__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashloanInterface {
    return new utils.Interface(_abi) as FlashloanInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flashloan {
    return new Contract(address, _abi, signerOrProvider) as Flashloan;
  }
}
